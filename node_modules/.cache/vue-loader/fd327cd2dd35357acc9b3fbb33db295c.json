{"remainingRequest":"/home/runner/work/U1_Pensamiento_Estrategico_Prospectivo/U1_Pensamiento_Estrategico_Prospectivo/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U1_Pensamiento_Estrategico_Prospectivo/U1_Pensamiento_Estrategico_Prospectivo/src/views/curso/Tema3.vue?vue&type=template&id=3d49502e&lang=pug&","dependencies":[{"path":"/home/runner/work/U1_Pensamiento_Estrategico_Prospectivo/U1_Pensamiento_Estrategico_Prospectivo/src/views/curso/Tema3.vue","mtime":1733537582356},{"path":"/home/runner/work/U1_Pensamiento_Estrategico_Prospectivo/U1_Pensamiento_Estrategico_Prospectivo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U1_Pensamiento_Estrategico_Prospectivo/U1_Pensamiento_Estrategico_Prospectivo/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U1_Pensamiento_Estrategico_Prospectivo/U1_Pensamiento_Estrategico_Prospectivo/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U1_Pensamiento_Estrategico_Prospectivo/U1_Pensamiento_Estrategico_Prospectivo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U1_Pensamiento_Estrategico_Prospectivo/U1_Pensamiento_Estrategico_Prospectivo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jdXJzby1tYWluLWNvbnRhaW5lci5wYi0zCiAgQmFubmVySW50ZXJubyg6c3ViVGl0dWxvPSInMy4gSGFiaWxpZGFkZXMgeSBjb21wZXRlbmNpYXMgZGVsIHBlbnNhbWllbnRvIGVzdHJhdMOpZ2ljbyAnIikKICAuY29udGFpbmVyLnRhcmpldGEudGFyamV0YS0tYmxhbmNhLnB4LTQucHQtNC5weC1tZC01LnB0LW1kLTUucGItMAogICAgLnJvdy5qdXN0aWZ5LWNvbnRlbnQtY2VudGVyLm1iLTUKICAgICAgLmNvbC1sZy00LmNvbC03Lm1iLWxnLTAubWItMzogaW1nKHNyYz0nQC9hc3NldHMvY3Vyc28vdGVtYXMvMjAucG5nJywgYWx0PScnKQogICAgICAuY29sLWxnLTgKICAgICAgICBwLm1iLTAgRXN0ZSB0ZW1hIHNlIGNlbnRyYSBlbiBsYXMgY2FwYWNpZGFkZXMgcXVlIHBlcm1pdGVuIGEgbG9zIGRpcmVjdGl2b3MgIHkgZXF1aXBvcyBhbnRpY2lwYXIsIGFkYXB0YXJzZSB5IHByb3NwZXJhciBlbiBzaXR1YWNpb25lcyBkZXNhZmlhbnRlcy4KICAgICAgICAgIGJyCiAgICAgICAgICBicgogICAgICAgICAgfFNlIGV4cG9uZW4gY2luY28gaGFiaWxpZGFkZXMgcXVlIGNvbXBvbmVuIGVsIHBlbnNhbWllbnRvIGVzdHJhdMOpZ2ljbzogbGEgdmlzacOzbiBhIGxhcmdvIHBsYXpvLCBsYSBjYXBhY2lkYWQgZGUgYWRhcHRhY2nDs24geSBmbGV4aWJpbGlkYWQsIGxhIGNyZWF0aXZpZGFkIHkgcmVzb2x1Y2nDs24gZGUgcHJvYmxlbWFzLCBsYXMgaGFiaWxpZGFkZXMgZGUgYW7DoWxpc2lzIHkgc8OtbnRlc2lzLCB5IGxhIHRvbWEgZGUgcmllc2dvcyBpbmZvcm1hZG9zLiBDYWRhIHVuYSBkZSBlc3RhcyBjb21wZXRlbmNpYXMgc29uIGltcG9ydGFudGVzIHkgYWwgbWlzbW8gdGllbXBvIGludGVyYWN0w7phbiBkZSBtYW5lcmEgc2luw6lyZ2ljYSBwYXJhIGZvcnRhbGVjZXIgbGEgY2FwYWNpZGFkIGRlIHVuIGluZGl2aWR1byBvIGVxdWlwbyBwYXJhIGVuZnJlbnRhciBsb3MgcmV0b3MgY29udGVtcG9yw6FuZW9zLiBDb25vemNhbW9zIGNhZGEgdW5hIGRlIGVsbGFzOgogICAgLm1uLnAtNShzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogI0UzRjNGNCIpCiAgICAgIFNseWRlckEodGlwbz0nYicpCiAgICAgICAgLnJvdy5iZy13aGl0ZS5wLTUKICAgICAgICAgIC5jb2wtbWQtNi5tYi00Lm1iLW1kLTAKICAgICAgICAgICAgaDQgVmlzacOzbiBhIGxhcmdvIHBsYXpvCiAgICAgICAgICAgIHAgTGEgdmlzacOzbiBhIGxhcmdvIHBsYXpvLCBzZSByZWZpZXJlIGEgbGEgY2FwYWNpZGFkIGRlIGVzdGFibGVjZXIgbWV0YXMgeSBvYmpldGl2b3MgcXVlIHRyYXNjaWVuZGVuIGVsIGNvcnRvIHBsYXpvLCBwcm9wb3JjaW9uYW5kbyBkaXJlY2Npw7NuIHkgcHJvcMOzc2l0byBhIGxhcyBhY2Npb25lcyBlc3RyYXTDqWdpY2FzIChCYXMgQW1vcsOzcywgMjAxMykuIEVzdGEgaGFiaWxpZGFkIHBlcm1pdGUgYSBsb3MgaW5kaXZpZHVvcyB5IG9yZ2FuaXphY2lvbmVzLCBhbnRpY2lwYXIgY2FtYmlvcyBlbiBlbCBlbnRvcm5vIHkgYWRhcHRhcnNlIHByb2FjdGl2YW1lbnRlLiBVbmEgdmlzacOzbiBjbGFyYSBubyBzb2xvIG1vdGl2YSBhbCBlcXVpcG8sIHNpbm8gcXVlIHRhbWJpw6luIGF5dWRhIGEgZW5jYW1pbmFyIGxvcyBlc2Z1ZXJ6b3MgaGFjaWEgdW4gZnV0dXJvIGRlc2VhZG8sIGZhY2lsaXRhbmRvIGxhIHRvbWEgZGUgZGVjaXNpb25lcyBlc3RyYXTDqWdpY2FzIHF1ZSBlc3TDoW4gZW4gY29uc29uYW5jaWEgY29uIGxvcyBvYmpldGl2b3MgZ2VuZXJhbGVzIChCYXMgQW1vcsOzcywgMjAxMykuCiAgICAgICAgICAuY29sLW1kLTYKICAgICAgICAgICAgZmlndXJlCiAgICAgICAgICAgICAgaW1nKHNyYz0nQC9hc3NldHMvY3Vyc28vdGVtYXMvMjEucG5nJywgYWx0PSdUZXh0byBxdWUgZGVzY3JpYmEgbGEgaW1hZ2VuJykKICAgICAgICAucm93LmJnLXdoaXRlLnAtNQogICAgICAgICAgLmNvbC1tZC02Lm1iLTQubWItbWQtMAogICAgICAgICAgICBoNCBDYXBhY2lkYWQgZGUgYWRhcHRhY2nDs24geSBmbGV4aWJpbGlkYWQKICAgICAgICAgICAgcCBMYSBjYXBhY2lkYWQgZGUgYWRhcHRhY2nDs24geSBmbGV4aWJpbGlkYWQsIGp1ZWdhIHVuIHBhcGVsIHByb3RhZ8OzbmljbyBlbiBlbCBwZW5zYW1pZW50byBlc3RyYXTDqWdpY28gcHVlcyBlc3RhIGhhYmlsaWRhZCBwZXJtaXRlIGEgbGFzIG9yZ2FuaXphY2lvbmVzIHJlc3BvbmRlciBlZmljYXptZW50ZSBhIG51ZXZhcyBjaXJjdW5zdGFuY2lhcywgYWp1c3RhbmRvIHN1cyBlc3RyYXRlZ2lhcyB5IHTDoWN0aWNhcywgc2Vnw7puIHNlYSBuZWNlc2FyaW8gKEJhcyBBbW9yw7NzLCAyMDEzKS4gTGEgZmxleGliaWxpZGFkIHNlIHRyYWR1Y2UgZW4gbGEgZGlzcG9zaWNpw7NuIGEgcmVjb25zaWRlcmFyIGVuZm9xdWVzIHkgYWRvcHRhciBudWV2YXMgaWRlYXMsIGxvIGN1YWwgZXMgZnVuZGFtZW50YWwgcGFyYSBlbmZyZW50YXIgZGVzYWbDrW9zIGltcHJldmlzdG9zIHkgYXByb3ZlY2hhciBvcG9ydHVuaWRhZGVzIGVtZXJnZW50ZXMgKEJhcyBBbW9yw7NzLCAyMDEzKS4KICAgICAgICAgIC5jb2wtbWQtNgogICAgICAgICAgICBmaWd1cmUKICAgICAgICAgICAgICBpbWcoc3JjPSdAL2Fzc2V0cy9jdXJzby90ZW1hcy8yMi5wbmcnLCBhbHQ9J1RleHRvIHF1ZSBkZXNjcmliYSBsYSBpbWFnZW4nKQogICAgICAgIC5yb3cuYmctd2hpdGUucC01CiAgICAgICAgICAuY29sLW1kLTYubWItNC5tYi1tZC0wCiAgICAgICAgICAgIGg0IENyZWF0aXZpZGFkIHkgcmVzb2x1Y2nDs24gZGUgcHJvYmxlbWFzCiAgICAgICAgICAgIHAgTGEgY3JlYXRpdmlkYWQgZXMgbGEgY2FwYWNpZGFkIGRlIGdlbmVyYXIgaWRlYXMgaW5ub3ZhZG9yYXMgeSBvcmlnaW5hbGVzIHF1ZSBwdWVkZW4gc2VyIGFwbGljYWRhcyBwYXJhIHJlc29sdmVyIHByb2JsZW1hcyBjb21wbGVqb3MgKEJhcyBBbW9yw7NzLCAyMDEzKS4gRW4gZWwgY29udGV4dG8gZGVsIHBlbnNhbWllbnRvIGVzdHJhdMOpZ2ljbywgbGEgY3JlYXRpdmlkYWQgc2UgY29udmllcnRlIGVuIHVuYSBoZXJyYW1pZW50YSB2aXRhbCBwYXJhIGFib3JkYXIgZGVzYWbDrW9zIGRlIG1hbmVyYSBlZmVjdGl2YS4gTGEgcmVzb2x1Y2nDs24gZGUgcHJvYmxlbWFzLCBwb3Igc3UgcGFydGUsIGltcGxpY2EgdW4gcHJvY2VzbyBlc3RydWN0dXJhZG8gZGUgaWRlbnRpZmljYWNpw7NuLCBhbsOhbGlzaXMgeSBmb3JtdWxhY2nDs24gZGUgc29sdWNpb25lcyAoQmFzIEFtb3LDs3MsIDIwMTMpOyBlc3RhcyBoYWJpbGlkYWRlcyBmYWNpbGl0YW4gYSBsYXMgb3JnYW5pemFjaW9uZXMgbmF2ZWdhciBwb3IgZGl2ZXJzb3MgY29udGV4dG9zLCBlbmNvbnRyYW5kbyByZXNwdWVzdGFzIGVmaWNhY2VzIHkgc29zdGVuaWJsZXMuCiAgICAgICAgICAuY29sLW1kLTYKICAgICAgICAgICAgZmlndXJlCiAgICAgICAgICAgICAgaW1nKHNyYz0nQC9hc3NldHMvY3Vyc28vdGVtYXMvMjMucG5nJywgYWx0PSdUZXh0byBxdWUgZGVzY3JpYmEgbGEgaW1hZ2VuJykKICAgICAgICAucm93LmJnLXdoaXRlLnAtNQogICAgICAgICAgLmNvbC1tZC02Lm1iLTQubWItbWQtMAogICAgICAgICAgICBoNCBIYWJpbGlkYWRlcyBkZSBhbsOhbGlzaXMgeSBzw61udGVzaXMKICAgICAgICAgICAgcCBMYXMgaGFiaWxpZGFkZXMgZGUgYW7DoWxpc2lzIHkgc8OtbnRlc2lzLCByZXByZXNlbnRhbiB1bmEgY29tcGV0ZW5jaWEgc29zdGVuaWJsZSBwYXJhIGVsIHBlbnNhbWllbnRvIGVzdHJhdMOpZ2ljbywgcHVlcyBlc3RhcyBwZXJtaXRlbiBkZXNjb21wb25lciBpbmZvcm1hY2nDs24gY29tcGxlamEgZW4gcGFydGVzIG1hbmVqYWJsZXMgeSBsdWVnbyBjb21iaW5hciBlc29zIGVsZW1lbnRvcyBlbiB1biB0b2RvIGNvaGVyZW50ZS4gRWwgYW7DoWxpc2lzIGltcGxpY2EgZXZhbHVhciBkYXRvcyB5IHNpdHVhY2lvbmVzIHBhcmEgY29tcHJlbmRlciBsYXMgZGluw6FtaWNhcyBpbnZvbHVjcmFkYXMsIG1pZW50cmFzIHF1ZSBsYSBzw61udGVzaXMgc2UgcmVmaWVyZSBhIGxhIGNhcGFjaWRhZCBkZSBpbnRlZ3JhciBkaXZlcnNvcyBlbGVtZW50b3MgZGUgaW5mb3JtYWNpw7NuIHBhcmEgZm9ybXVsYXIgY29uY2x1c2lvbmVzIHkgcmVjb21lbmRhY2lvbmVzIGVzdHJhdMOpZ2ljYXMgKEJhcyBBbW9yw7NzLCAyMDEzKS4KICAgICAgICAgIC5jb2wtbWQtNgogICAgICAgICAgICBmaWd1cmUKICAgICAgICAgICAgICBpbWcoc3JjPSdAL2Fzc2V0cy9jdXJzby90ZW1hcy8yNC5wbmcnLCBhbHQ9J1RleHRvIHF1ZSBkZXNjcmliYSBsYSBpbWFnZW4nKQogICAgICAgIC5yb3cuYmctd2hpdGUucC01CiAgICAgICAgICAuY29sLW1kLTYubWItNC5tYi1tZC0wCiAgICAgICAgICAgIGg0IExhIHRvbWEgZGUgcmllc2dvcyBpbmZvcm1hZG9zCiAgICAgICAgICAgIHAgTGEgdG9tYSBkZSByaWVzZ29zIGluZm9ybWFkb3MgZXMgbGEgaGFiaWxpZGFkIGRlIGV2YWx1YXIgb3BvcnR1bmlkYWRlcyB5IGRlY2lkaXIgYWN0dWFyIGEgcGVzYXIgZGUgbGEgaW5jZXJ0aWR1bWJyZSBpbmhlcmVudGUgKEJhcyBBbW9yw7NzLCAyMDEzKS4gRXN0YSBjb21wZXRlbmNpYSBpbXBsaWNhIHVuIGFuw6FsaXNpcyBjdWlkYWRvc28gZGUgbGFzIHBvc2libGVzIGNvbnNlY3VlbmNpYXMgeSBiZW5lZmljaW9zIGRlIHVuYSBkZWNpc2nDs24sIHBlcm1pdGllbmRvIGEgbGFzIG9yZ2FuaXphY2lvbmVzIGFkb3B0YXIgZW5mb3F1ZXMgZXN0cmF0w6lnaWNvcyBxdWUgcHVlZGVuIGxsZXZhciBhIHJlc3VsdGFkb3MgcG9zaXRpdm9zIHNpZ25pZmljYXRpdm9zLiBBbCBmb21lbnRhciB1bmEgY3VsdHVyYSBkZSB0b21hIGRlIHJpZXNnb3MgaW5mb3JtYWRvcywgbGFzIG9yZ2FuaXphY2lvbmVzIHB1ZWRlbiBpbm5vdmFyIHkgYWRhcHRhcnNlIG3DoXMgcsOhcGlkYW1lbnRlIGEgbGFzIGNvbmRpY2lvbmVzIGNhbWJpYW50ZXMgZGVsIG1lcmNhZG8gKEJhcyBBbW9yw7NzLCAyMDEzKS4KICAgICAgICAgIC5jb2wtbWQtNgogICAgICAgICAgICBmaWd1cmUKICAgICAgICAgICAgICBpbWcoc3JjPSdAL2Fzc2V0cy9jdXJzby90ZW1hcy8yNS5wbmcnLCBhbHQ9J1RleHRvIHF1ZSBkZXNjcmliYSBsYSBpbWFnZW4nKQoKICAgIAo="},null]}
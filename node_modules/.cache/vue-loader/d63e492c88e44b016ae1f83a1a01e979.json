{"remainingRequest":"/home/runner/work/U1_Pensamiento_Estrategico_Prospectivo/U1_Pensamiento_Estrategico_Prospectivo/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U1_Pensamiento_Estrategico_Prospectivo/U1_Pensamiento_Estrategico_Prospectivo/src/views/curso/Tema1.vue?vue&type=template&id=091c0eb8&lang=pug&","dependencies":[{"path":"/home/runner/work/U1_Pensamiento_Estrategico_Prospectivo/U1_Pensamiento_Estrategico_Prospectivo/src/views/curso/Tema1.vue","mtime":1733537582356},{"path":"/home/runner/work/U1_Pensamiento_Estrategico_Prospectivo/U1_Pensamiento_Estrategico_Prospectivo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U1_Pensamiento_Estrategico_Prospectivo/U1_Pensamiento_Estrategico_Prospectivo/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U1_Pensamiento_Estrategico_Prospectivo/U1_Pensamiento_Estrategico_Prospectivo/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U1_Pensamiento_Estrategico_Prospectivo/U1_Pensamiento_Estrategico_Prospectivo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U1_Pensamiento_Estrategico_Prospectivo/U1_Pensamiento_Estrategico_Prospectivo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}